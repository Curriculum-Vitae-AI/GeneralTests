name: Pull-Request jobs

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-test-coverage:
    name: Build & Test Coverage Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.17.0'

      - name: Clean and install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

  commit-lint:
    name: ConventionalCommits Validation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate commit messages
        id: commit-validation
        run: |
          
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO=${{ github.repository }}
          TOKEN=${{ secrets.GITHUB_TOKEN }}

          types=("build" "chore" "ci" "docs" "feat" "fix" "perf" "refactor" "revert" "style" "test")
          
          commits=$(curl -s -H "Authorization: token $TOKEN" \
            "https://api.github.com/repos/$REPO/pulls/$PR_NUMBER/commits" \
            | jq -r '.[].commit.message')
          
          commitIsValid=true

          while IFS= read -r commit; do
            if [[ "$commit" == *": "* ]]; then

              echo "Commit message: $commit"
              
              type=$(echo "$commit" | awk -F': ' '{print $1}')
              if [[ ! " ${types[*]} " == *" $type "* ]]; then
                echo "Type is not a valid one."
                commitIsValid=false
              fi
              
              message=$(echo "$commit" | awk -F': ' '{print $2}')
              if ! echo "$message" | grep -Eq '^[a-z ]+$'; then
                echo "Message contains characters that are not space or lower case letters."
                commitIsValid=false
              elif [[ ${#message} -gt 50 ]]; then
                echo "Message contains more than 50 characters."
                commitIsValid=false
              fi
            
            else
              echo "Commit message does not contain ': ': $commit"
              commitIsValid=false    
            fi            
            
          done <<< "$commits"
          echo "commitIsValid=$commitIsValid" >> $GITHUB_ENV

      - name: Close Pull Request (Commit validation)
        if: env.commitIsValid == 'false'
        run: |
          gh pr close ${{ github.event.pull_request.number }} --repo ${{ github.repository }} --comment "## **❌ Commit(s) Invalid ❌**
           The commit message is not in convetional commits pattern. Please refer to: https://www.conventionalcommits.org/pt-br/v1.0.0/"
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment (Commit validation)
        if: env.commitIsValid == 'true'
        run: |
           gh pr comment ${{ github.event.pull_request.number }} --repo ${{ github.repository }} --body "## **✅ Commit(s) are Valid ✅**.
           All the commits follow conventional commits pattern, PR not closed."
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}